{
  "report_metadata": {
    "generated_at": 1759043979.8774881,
    "duration": 58.006794929504395,
    "homodyne_available": true,
    "numba_available": true,
    "cvxpy_available": true,
    "robust_available": true
  },
  "system_info": {
    "platform": {
      "system": "Darwin",
      "release": "24.6.0",
      "machine": "arm64",
      "processor": "arm64"
    },
    "python": {
      "version": "3.13.7 (main, Aug 14 2025, 11:12:11) [Clang 17.0.0 (clang-1700.0.13.3)]",
      "executable": "/Users/b80985/Projects/homodyne-analysis/venv/bin/python",
      "path": [
        "/Users/b80985/Projects/homodyne-analysis",
        "/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python313.zip",
        "/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13"
      ]
    },
    "hardware": {
      "cpu_count": 8,
      "cpu_freq": {
        "current": 3228,
        "min": 600,
        "max": 3228
      },
      "memory_total": 17179869184,
      "memory_available": 5934530560,
      "disk_usage": {
        "total": 494384795648,
        "used": 11256700928,
        "free": 51417001984,
        "percent": 18.0
      }
    },
    "dependencies": {
      "numpy": "2.3.3",
      "scipy": "1.16.2",
      "matplotlib": "3.10.6",
      "numba": "0.62.0",
      "cvxpy": "1.7.3",
      "psutil": "7.1.0"
    }
  },
  "performance_metrics": {
    "import_times": {
      "numpy": 2.6941299438476562e-05,
      "scipy": 1.0967254638671875e-05,
      "matplotlib": 7.867813110351562e-06,
      "homodyne.core.config": "Failed: cannot import name 'HomodyneConfigManager' from 'homodyne.core.config' (/Users/b80985/Projects/homodyne-analysis/homodyne/core/config.py)",
      "homodyne.analysis.core": 1.0967254638671875e-05,
      "homodyne.optimization.classical": 1.0967254638671875e-05,
      "homodyne.optimization.robust": 9.059906005859375e-06
    },
    "config_creation": {
      "duration": 0.05003809928894043,
      "memory_delta": 114688,
      "memory_peak": 131479,
      "cpu_time": 0.04288996800000003,
      "cpu_percent": 85.71462267648464,
      "timestamp": 1759043921.921364
    },
    "core_initialization": {
      "duration": 0.06272506713867188,
      "memory_delta": 147456,
      "memory_peak": 114698,
      "cpu_time": 0.04412614399999984,
      "cpu_percent": 70.34850022949558,
      "timestamp": 1759043921.9843378
    },
    "synthetic_data_generation": {
      "duration": 0.21233105659484863,
      "memory_delta": 271581184,
      "memory_peak": 247505191,
      "cpu_time": 0.195137248,
      "cpu_percent": 91.90235810503391,
      "timestamp": 1759043922.196811
    },
    "chi_squared_calculation": {
      "duration": 1.1106150150299072,
      "memory_delta": 89456640,
      "memory_peak": 162912000,
      "cpu_time": 0.9859721279999999,
      "cpu_percent": 88.77712930735491,
      "timestamp": 1759043923.316774
    },
    "correlation_calculation": {
      "duration": 0.07245397567749023,
      "memory_delta": 0,
      "memory_peak": 95818020,
      "cpu_time": 0.07011782399999994,
      "cpu_percent": 96.77567496380178,
      "timestamp": 1759043923.389411
    }
  },
  "bottlenecks": [
    {
      "operation": "test_execution",
      "issue": "Test failures detected",
      "severity": "medium"
    },
    {
      "operation": "chi_squared_calculation",
      "issue": "Moderate latency: 1.1s",
      "severity": "medium",
      "optimization_opportunity": "Performance tuning"
    }
  ],
  "optimization_opportunities": [
    {
      "area": "Chi-squared calculation",
      "description": "Optimize chi-squared computation with vectorization",
      "impact": "high",
      "effort": "medium",
      "estimated_improvement": "20-40% speedup",
      "priority_score": 8
    },
    {
      "area": "Import optimization",
      "description": "Implement lazy loading for heavy modules",
      "impact": "medium",
      "effort": "low",
      "estimated_improvement": "50-80% startup time reduction",
      "priority_score": 7
    },
    {
      "area": "Numba JIT compilation",
      "description": "Apply JIT compilation to computational kernels",
      "impact": "high",
      "effort": "high",
      "estimated_improvement": "2-5x speedup for computations",
      "priority_score": 7
    },
    {
      "area": "Memory allocation",
      "description": "Implement memory pooling for frequent allocations",
      "impact": "medium",
      "effort": "medium",
      "estimated_improvement": "10-20% memory reduction",
      "priority_score": 6
    },
    {
      "area": "Data structure optimization",
      "description": "Optimize data structures for cache efficiency",
      "impact": "medium",
      "effort": "high",
      "estimated_improvement": "15-30% performance improvement",
      "priority_score": 5
    }
  ],
  "memory_analysis": {},
  "cpu_analysis": {},
  "test_performance": {
    "duration": 56.48584985733032,
    "return_code": 1,
    "stdout_lines": 1903,
    "stderr_lines": 0,
    "success": false
  }
}